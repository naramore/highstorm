// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.158.0/containers/elixir-phoenix-postgres
{
	"name": "devapp",
	"dockerComposeFile": "docker-compose.yml",
	"service": "elixir",
	"workspaceFolder": "/workspace",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/zsh",
		"sqltools.connections": [{
			"name": "Container database",
			"driver": "PostgreSQL",
			"previewLimit": 50,
			"server": "localhost",
			"port": 5432,
			"database": "postgres",
			"username": "postgres",
			"password": "postgres"
		}]
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"jakebecker.elixir-ls",
		"pgourlain.erlang",
		"mtxr.sqltools",
		"mtxr.sqltools-driver-pg",
		"ms-azuretools.vscode-docker",
    "vsls-contrib.codetour",
    "eamodio.gitlens",
    "ms-vsliveshare.vsliveshare",
    "ms-vsliveshare.vsliveshare-pack"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [4000, 4001, 5432],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "mix deps.get",

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"shutdownAction": "stopCompose"
}
